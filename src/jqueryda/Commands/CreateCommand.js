// Generated by CoffeeScript 1.7.1
var CreateCommand;

CreateCommand = (function() {
  function CreateCommand(parent) {
    this.parent = parent;
  }


  /*
  Recebe uma lista de elementos e os cria cada um segundo sua classe. 
  Após criar cada elemento os envia para o renderizador, que fará as conexões de paternidade
   */

  CreateCommand.prototype.execute = function(elements) {
    var attribs, element, render, self;
    for (element in elements) {
      attribs = elements[element];
      this.create(element, attribs);
    }
    render = this.parent.render;
    render.renderDependences();
    self = this;
    return $(window).load(function() {
      render.render();
      render.defineContainerWidths(this);
      render.defineContainerHeights(this);
      render.startElements();
      return setTimeout(function() {
        return self.linkEvents(elements);
      }, 0);
    });
  };

  CreateCommand.prototype.create = function(element, attribs) {
    var instance;
    instance = this.getInstance(attribs.type, attribs);
    if (!instance.name) {
      instance.name = element;
    }
    instance.id = element;
    this.parent.render.addElement(element, instance);
    return this.parent.render;
  };

  CreateCommand.prototype.getInstance = function(type, attribs) {
    eval('ret = new ' + type + '(attribs);');
    return ret;
  };

  CreateCommand.prototype.linkEvents = function(elements) {
    var render;
    render = this.parent.render;
    console.log('linkando com', render);
    return render.linkDefaulsInElements(elements);
  };

  return CreateCommand;

})();
