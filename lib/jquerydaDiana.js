// Generated by CoffeeScript 1.7.1
var FormRenderExt, GroupRenderExt, LineRenderExt, Render, Sender,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Render = (function(_super) {
  __extends(Render, _super);

  function Render() {
    return Render.__super__.constructor.apply(this, arguments);
  }

  return Render;

})(RenderizerAbstract);

Sender = (function(_super) {
  __extends(Sender, _super);

  function Sender() {
    return Sender.__super__.constructor.apply(this, arguments);
  }

  return Sender;

})(SenderAbstract);

FormRenderExt = (function(_super) {
  __extends(FormRenderExt, _super);

  function FormRenderExt() {
    return FormRenderExt.__super__.constructor.apply(this, arguments);
  }

  FormRenderExt.prototype.createElement = function(def, renderizer) {
    var ret;
    ret = document.createElement('div');
    def.specificRender = this;
    renderizer.addContainer(def);
    $(ret).attr('data-role', 'main');
    this.element = def;
    this.component = ret;
    $(ret).addClass('ui-content');
    $(ret).addClass('jqm-content');
    def.setWidth('100%');
    $('body').addClass('noborder');
    return ret;
  };

  FormRenderExt.prototype.beforeStartChildren = function(def, renderizer) {};

  FormRenderExt.prototype.ajustRight = function(element, maxRight, extra) {};

  FormRenderExt.prototype.startElement = function(def, renderizer) {
    var group, groupRenders, line, lineRenders, pager, pagerRenders, _i, _j, _k, _len, _len1, _len2, _results;
    lineRenders = def.getLineRenders();
    groupRenders = def.getGroupRenders();
    pagerRenders = def.getPagerRenders();
    for (_i = 0, _len = groupRenders.length; _i < _len; _i++) {
      group = groupRenders[_i];
      if (typeof group.afterFormStart === "function") {
        group.afterFormStart();
      }
    }
    for (_j = 0, _len1 = pagerRenders.length; _j < _len1; _j++) {
      pager = pagerRenders[_j];
      if (typeof pager.afterFormStart === "function") {
        pager.afterFormStart();
      }
    }
    _results = [];
    for (_k = 0, _len2 = lineRenders.length; _k < _len2; _k++) {
      line = lineRenders[_k];
      _results.push(line.afterFormStart());
    }
    return _results;
  };

  FormRenderExt.prototype.realignElement = function(def, renderizer) {};

  FormRenderExt.prototype.afterRealignChildren = function(def, renderizer) {};

  FormRenderExt.prototype.afterRealignChildren = function(def, renderizer) {};

  FormRenderExt.prototype.afterAllRealign = function(def, renderizer) {
    this.startElement(def, renderizer);
    return this.afterAllStart(def, renderizer);
  };

  FormRenderExt.prototype.markElements = function(def, renderizer) {
    var child, count, last, _i, _len, _ref, _results;
    last = def.children.length;
    count = 0;
    _ref = def.children;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      child = _ref[_i];
      count++;
      if (count === 1) {
        $(child.component).attr("first", child.parent.type);
      } else if (count === last) {
        $(child.component).attr("last", child.parent.type);
      } else {
        $(child.component).attr("mid", child.parent.type);
      }
      _results.push($(child.component).attr("in", child.parent.getContainerStyle()));
    }
    return _results;
  };

  FormRenderExt.prototype.getWidth = function(element, children, sizeScreen, componentsSizes, usedSize, renderCount) {
    this.lastElement = element;
    if (renderCount === children) {
      return sizeScreen - usedSize;
    }
    return Math.round((element.size * sizeScreen / componentsSizes) - 1);
  };

  FormRenderExt.prototype.defineContainerWidths = function(def, renderizer) {};

  FormRenderExt.prototype.afterAllStart = function(def, renderizer) {
    return $.mobile.initializePage();
  };

  FormRenderExt.prototype.defineContainerHeights = function(def, renderizer) {};

  return FormRenderExt;

})(SpecificElementRender);

GroupRenderExt = (function(_super) {
  __extends(GroupRenderExt, _super);

  function GroupRenderExt() {
    return GroupRenderExt.__super__.constructor.apply(this, arguments);
  }

  GroupRenderExt.prototype.createElement = function(def, renderizer) {
    var ret;
    ret = document.createElement('fieldset');
    def.obj_label = document.createElement('legend');
    def.component = ret;
    $(ret).append(def.obj_label);
    if (def.label) {
      def.setLabel(def.label);
    }
    def.getParent().addGroupRender(this);
    def.specificRender = this;
    this.element = def;
    this.component = ret;
    renderizer.addContainer(def);
    return ret;
  };

  GroupRenderExt.prototype.beforeStartChildren = function(def, renderizer) {};

  GroupRenderExt.prototype.defineContainerWidths = function(def, renderizer) {};

  GroupRenderExt.prototype.defineContainerHeights = function(def, renderizer) {};

  GroupRenderExt.prototype.ajustRight = function(element, maxRight, extra) {};

  return GroupRenderExt;

})(SpecificElementRender);

LineRenderExt = (function(_super) {
  __extends(LineRenderExt, _super);

  function LineRenderExt() {
    return LineRenderExt.__super__.constructor.apply(this, arguments);
  }

  LineRenderExt.prototype.createElement = function(def, renderizer) {
    var ret;
    ret = document.createElement('div');
    $(ret).addClass('line');
    if ((def.margin != null) > 0) {
      $(def.component).css('padding-left', def.margin);
    }
    $(ret).css('width', '100%');
    def.specificRender = this;
    renderizer.addContainer(def);
    def.parent.addLineRender(this);
    this.element = def;
    this.component = ret;
    return ret;
  };

  LineRenderExt.prototype.afterFormStart = function() {};

  LineRenderExt.prototype.startElement = function(def, renderizer) {};

  LineRenderExt.prototype._initializeAlgorithms = function() {};

  LineRenderExt.prototype._alignElements = function(def, renderizer) {};

  LineRenderExt.prototype._justify = function(def, specificRender, renderizer, children, screenElement, methodToGetSizeScreen, percentual) {};

  LineRenderExt.prototype._renderLeft = function(def, renderizer, children) {};

  LineRenderExt.prototype.analizeHumanComfortableSize = function(def, renderizer, children, trySize) {
    if (trySize == null) {
      trySize = null;
    }
  };

  LineRenderExt.prototype.processSameRight = function(def, renderizer, children) {};

  LineRenderExt.prototype.processGroups = function(def, renderizer) {};

  LineRenderExt.prototype.defineContainerWidths = function(def, renderizer) {};

  return LineRenderExt;

})(SpecificElementRender);
