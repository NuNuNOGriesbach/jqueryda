// Generated by CoffeeScript 1.7.1
var DialogRenderExt, FormRenderExt, HorizontalTitleRender, LineRenderExt, PageRenderExt, PagerRenderExt, Render, Sender, TextFieldRenderExt,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Render = (function(_super) {
  __extends(Render, _super);

  function Render() {
    return Render.__super__.constructor.apply(this, arguments);
  }

  return Render;

})(RenderizerAbstract);

Sender = (function(_super) {
  __extends(Sender, _super);

  function Sender() {
    return Sender.__super__.constructor.apply(this, arguments);
  }

  return Sender;

})(SenderAbstract);

HorizontalTitleRender = (function(_super) {
  __extends(HorizontalTitleRender, _super);

  function HorizontalTitleRender() {
    return HorizontalTitleRender.__super__.constructor.apply(this, arguments);
  }

  HorizontalTitleRender.prototype.createElement = function(def, renderizer) {
    return document.createElement('h3');
  };

  return HorizontalTitleRender;

})(SpecificElementRender);

TextFieldRenderExt = (function(_super) {
  __extends(TextFieldRenderExt, _super);

  function TextFieldRenderExt() {
    return TextFieldRenderExt.__super__.constructor.apply(this, arguments);
  }

  TextFieldRenderExt.prototype.createElement = function(def, renderizer) {
    var ret;
    ret = TextFieldRenderExt.__super__.createElement.call(this, def, renderizer);
    this.element = def;
    $(def.obj_field).addClass('ui-widget-input');
    return ret;
  };

  return TextFieldRenderExt;

})(TextFieldRender);

DialogRenderExt = (function(_super) {
  __extends(DialogRenderExt, _super);

  function DialogRenderExt() {
    return DialogRenderExt.__super__.constructor.apply(this, arguments);
  }

  DialogRenderExt.prototype.startElement = function(def, renderizer) {
    DialogRenderExt.__super__.startElement.call(this, def, renderizer);
    $('#' + def.id).dialog({
      autoOpen: false,
      modal: true
    });
    return this.defineEvents(def, renderizer);
  };

  DialogRenderExt.prototype.open = function(def, renderizer) {
    $('#' + def.id).dialog({
      autoOpen: false,
      modal: true
    });
    return $('#' + def.id).dialog('open');
  };

  DialogRenderExt.prototype.close = function(def, renderizer) {
    return $('#' + def.id).dialog('close');
  };

  DialogRenderExt.prototype.defineEvents = function(def, renderizer) {
    $(this.component).on('dialogresizestart', function() {
      return console.log('Dialog resize');
    });
    $(this.component).on('dialogclose', function(event, ui) {
      return def.onClose(renderizer, event, ui);
    });
    return $(this.component).on('dialogopen', function(event, ui) {
      return def.onOpen(renderizer, event, ui);
    });
  };

  DialogRenderExt.prototype.setWidth = function(value) {
    $(this.component).dialog({
      autoOpen: false,
      modal: true
    });
    return $(this.component).dialog("option", "width", value);
  };

  return DialogRenderExt;

})(DialogRender);

FormRenderExt = (function(_super) {
  __extends(FormRenderExt, _super);

  function FormRenderExt() {
    return FormRenderExt.__super__.constructor.apply(this, arguments);
  }

  FormRenderExt.prototype.createElement = function(def, renderizer) {
    var ret;
    ret = FormRenderExt.__super__.createElement.call(this, def, renderizer);
    this.element = def;
    this.component = ret;
    $('body').addClass('ui-widget-content');
    $('body').addClass('noborder');
    this.defineEvents(def, renderizer);
    return ret;
  };

  FormRenderExt.prototype.defineEvents = function(def, renderizer) {
    return $(window).on('resize', function(e) {
      console.log('********EVENT: ', e);
      if (e.target === window) {
        return renderizer.realignElements();
      }
    });
  };

  FormRenderExt.prototype.startElement = function(def, renderizer) {
    var parent, parentH, ret;
    ret = FormRenderExt.__super__.startElement.call(this, def, renderizer);
    if (typeof def.parentIfNotParent !== 'undefined' && def.parentIfNotParent !== 'body') {
      parent = $(def.parentIfNotParent);
      parentH = parent.getClientRects()['height'];
      $(this.component).height(parentH);
    } else {
      $(this.component).height(screen.availHeight);
    }
    $(this.component).addClass('noborder');
    return ret;
  };

  return FormRenderExt;

})(FormRender);

LineRenderExt = (function(_super) {
  __extends(LineRenderExt, _super);

  function LineRenderExt() {
    return LineRenderExt.__super__.constructor.apply(this, arguments);
  }

  LineRenderExt.prototype.createElement = function(def, renderizer) {
    var ret;
    ret = LineRenderExt.__super__.createElement.call(this, def, renderizer);
    this.element = def;
    $(ret).addClass('ui-widget');
    return ret;
  };

  return LineRenderExt;

})(LineRender);

PageRenderExt = (function(_super) {
  __extends(PageRenderExt, _super);

  function PageRenderExt() {
    return PageRenderExt.__super__.constructor.apply(this, arguments);
  }

  PageRenderExt.prototype.beforeStartChildren = function(def, renderizer) {
    if (def.width) {
      return def.setWidth(def.width);
    }
  };

  return PageRenderExt;

})(PageRender);

PagerRenderExt = (function(_super) {
  __extends(PagerRenderExt, _super);

  function PagerRenderExt() {
    return PagerRenderExt.__super__.constructor.apply(this, arguments);
  }

  PagerRenderExt.prototype.startElement = function(def, renderizer) {
    return PagerRenderExt.__super__.startElement.call(this, def, renderizer);
  };

  PagerRenderExt.prototype.afterAllStart = function(def, renderizer) {
    var child, _i, _len, _ref, _results;
    if (def.style === 'horizontal') {
      $('#' + def.id).tabs({
        heightStyle: "fill"
      });
    } else {
      $('#' + def.id).accordion({
        heightStyle: "fill"
      });
    }
    _ref = def.children;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      child = _ref[_i];
      if (def.style === 'horizontal') {
        $(child.component).removeClass('ui-tabs-panel');
        _results.push($(child.component).css('height', 'initial'));
      } else {
        $(child.component).removeClass('ui-accordion-content');
        _results.push($(child.component).css('height', 'initial'));
      }
    }
    return _results;
  };

  PagerRenderExt.prototype.beforeRealignChildren = function(def, renderizer) {
    if (def.style === 'horizontal') {
      return $('#' + def.id).tabs('destroy');
    } else {
      return $('#' + def.id).accordion('destroy');
    }
  };

  PagerRenderExt.prototype.afterAllRealign = function(def, renderizer) {
    this.startElement(def, renderizer);
    return this.afterAllStart(def, renderizer);
  };

  PagerRenderExt.prototype.activate = function(event, ui, def) {
    return def.start(this);
  };

  return PagerRenderExt;

})(PagerRender);
